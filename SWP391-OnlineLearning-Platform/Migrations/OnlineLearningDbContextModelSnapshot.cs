// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SWP391_OnlineLearning_Platform.Data;

namespace SWP391_OnlineLearning_Platform.Migrations
{
    [DbContext(typeof(OnlineLearningDbContext))]
    partial class OnlineLearningDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brief")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Category_Id")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date_Create")
                        .HasColumnType("datetime2");

                    b.Property<string>("Featured")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status_Id")
                        .HasColumnType("int");

                    b.Property<string>("Thumbnail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Category_Id");

                    b.HasIndex("Status_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.Comment", b =>
                {
                    b.Property<int>("Comment_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Blog_Id")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date_Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.HasKey("Comment_Id");

                    b.HasIndex("Blog_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Category_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Featured")
                        .HasColumnType("int");

                    b.Property<string>("Short_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status_Id")
                        .HasColumnType("int");

                    b.Property<string>("Thumbnail_URL")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Category_Id");

                    b.HasIndex("Status_Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.Course_Dimension", b =>
                {
                    b.Property<int>("Course_Id")
                        .HasColumnType("int");

                    b.Property<int>("Dimension_Id")
                        .HasColumnType("int");

                    b.HasKey("Course_Id", "Dimension_Id");

                    b.HasIndex("Dimension_Id");

                    b.ToTable("Course_Dimensions");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.Course_Package", b =>
                {
                    b.Property<int>("Course_Id")
                        .HasColumnType("int");

                    b.Property<int>("Package_Id")
                        .HasColumnType("int");

                    b.HasKey("Course_Id", "Package_Id");

                    b.HasIndex("Package_Id");

                    b.ToTable("Course_Packages");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.Dimension", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Type_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Type_Id");

                    b.ToTable("Dimensions");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.Dimension_Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Dimension_Types");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.Lesson", b =>
                {
                    b.Property<int>("Lesson_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Html_Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lesson_Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Lesson_Order")
                        .HasColumnType("int");

                    b.Property<int>("Status_Id")
                        .HasColumnType("int");

                    b.Property<int>("Topic_Id")
                        .HasColumnType("int");

                    b.Property<string>("Video_Link")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Lesson_Id");

                    b.HasIndex("Status_Id");

                    b.HasIndex("Topic_Id");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.Owner", b =>
                {
                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.Property<int>("Course_Id")
                        .HasColumnType("int");

                    b.HasKey("User_Id", "Course_Id");

                    b.HasIndex("Course_Id");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.Price_Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("List_price")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Status_Id")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Status_Id");

                    b.ToTable("Price_Packages");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.Question_Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Course_Id")
                        .HasColumnType("int");

                    b.Property<string>("Explanation")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Level_Id")
                        .HasColumnType("int");

                    b.Property<int>("Status_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Course_Id");

                    b.HasIndex("Level_Id");

                    b.HasIndex("Status_Id");

                    b.ToTable("Question_Banks");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.Question_Dimension", b =>
                {
                    b.Property<int>("Question_Id")
                        .HasColumnType("int");

                    b.Property<int>("Dimension_Id")
                        .HasColumnType("int");

                    b.HasKey("Question_Id", "Dimension_Id");

                    b.HasIndex("Dimension_Id");

                    b.ToTable("Question_Dimensions");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.Quiz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Course_Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Number_question")
                        .HasColumnType("int");

                    b.Property<float>("Pass_rate")
                        .HasColumnType("real");

                    b.Property<int>("Quiz_Level_Id")
                        .HasColumnType("int");

                    b.Property<int>("Quiz_Type_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Course_Id");

                    b.HasIndex("Quiz_Level_Id");

                    b.HasIndex("Quiz_Type_Id");

                    b.ToTable("Quizzes");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.Quiz_Level", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Quiz_Levels");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.Quiz_Question", b =>
                {
                    b.Property<int>("Quiz_Id")
                        .HasColumnType("int");

                    b.Property<int>("Question_Id")
                        .HasColumnType("int");

                    b.HasKey("Quiz_Id", "Question_Id");

                    b.HasIndex("Question_Id");

                    b.ToTable("Quiz_Questions");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.Quiz_Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Quiz_Types");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.Slide", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Course_link")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Image_Url")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Status_Id")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Status_Id");

                    b.ToTable("Slides");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Statuss");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.Topic", b =>
                {
                    b.Property<int>("Topic_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Course_Id")
                        .HasColumnType("int");

                    b.Property<string>("Topic_Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Topic_Order")
                        .HasColumnType("int");

                    b.HasKey("Topic_Id");

                    b.HasIndex("Course_Id");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Auth_Provider")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Avatar_Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Full_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reset_password_token")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status_Id")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Verification_code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Status_Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.User_Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Course_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("End_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Price_Package_Id")
                        .HasColumnType("int");

                    b.Property<int>("Registration_Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("Start_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Course_Id");

                    b.HasIndex("Price_Package_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("User_Courses");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.User_Question_Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Question_Id")
                        .HasColumnType("int");

                    b.Property<string>("User_Choice")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("User_Quiz_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Question_Id");

                    b.HasIndex("User_Quiz_Id");

                    b.ToTable("User_Question_Answers");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.User_Quiz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Mark")
                        .HasColumnType("real");

                    b.Property<int>("Quiz_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Start_Time")
                        .HasColumnType("datetime2");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Quiz_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("User_Quizzes");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.Blog", b =>
                {
                    b.HasOne("SWP391_OnlineLearning_Platform.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("Category_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SWP391_OnlineLearning_Platform.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("Status_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SWP391_OnlineLearning_Platform.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Status");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.Comment", b =>
                {
                    b.HasOne("SWP391_OnlineLearning_Platform.Models.Blog", "Blog")
                        .WithMany()
                        .HasForeignKey("Blog_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SWP391_OnlineLearning_Platform.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Blog");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.Course", b =>
                {
                    b.HasOne("SWP391_OnlineLearning_Platform.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("Category_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SWP391_OnlineLearning_Platform.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("Status_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.Course_Dimension", b =>
                {
                    b.HasOne("SWP391_OnlineLearning_Platform.Models.Course", "Course")
                        .WithMany("Course_Dimensions")
                        .HasForeignKey("Course_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SWP391_OnlineLearning_Platform.Models.Dimension", "Dimension")
                        .WithMany("Course_Dimensions")
                        .HasForeignKey("Dimension_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Dimension");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.Course_Package", b =>
                {
                    b.HasOne("SWP391_OnlineLearning_Platform.Models.Course", "Course")
                        .WithMany("Course_Packages")
                        .HasForeignKey("Course_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SWP391_OnlineLearning_Platform.Models.Price_Package", "Price_Package")
                        .WithMany("Course_Packages")
                        .HasForeignKey("Package_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Price_Package");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.Dimension", b =>
                {
                    b.HasOne("SWP391_OnlineLearning_Platform.Models.Dimension_Type", "Dimension_Type")
                        .WithMany()
                        .HasForeignKey("Type_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dimension_Type");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.Lesson", b =>
                {
                    b.HasOne("SWP391_OnlineLearning_Platform.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("Status_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SWP391_OnlineLearning_Platform.Models.Topic", "Topic")
                        .WithMany()
                        .HasForeignKey("Topic_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.Owner", b =>
                {
                    b.HasOne("SWP391_OnlineLearning_Platform.Models.Course", "Course")
                        .WithMany("Owners")
                        .HasForeignKey("Course_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SWP391_OnlineLearning_Platform.Models.User", "User")
                        .WithMany("Owners")
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.Price_Package", b =>
                {
                    b.HasOne("SWP391_OnlineLearning_Platform.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("Status_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.Question_Bank", b =>
                {
                    b.HasOne("SWP391_OnlineLearning_Platform.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("Course_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SWP391_OnlineLearning_Platform.Models.Quiz_Level", "Quiz_Level")
                        .WithMany()
                        .HasForeignKey("Level_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SWP391_OnlineLearning_Platform.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("Status_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Quiz_Level");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.Question_Dimension", b =>
                {
                    b.HasOne("SWP391_OnlineLearning_Platform.Models.Dimension", "Dimension")
                        .WithMany("Question_Dimensions")
                        .HasForeignKey("Dimension_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SWP391_OnlineLearning_Platform.Models.Question_Bank", "Question_Bank")
                        .WithMany("Question_Dimensions")
                        .HasForeignKey("Question_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dimension");

                    b.Navigation("Question_Bank");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.Quiz", b =>
                {
                    b.HasOne("SWP391_OnlineLearning_Platform.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("Course_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SWP391_OnlineLearning_Platform.Models.Quiz_Level", "Quiz_Level")
                        .WithMany()
                        .HasForeignKey("Quiz_Level_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SWP391_OnlineLearning_Platform.Models.Quiz_Type", "Quiz_Type")
                        .WithMany()
                        .HasForeignKey("Quiz_Type_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Quiz_Level");

                    b.Navigation("Quiz_Type");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.Quiz_Question", b =>
                {
                    b.HasOne("SWP391_OnlineLearning_Platform.Models.Question_Bank", "Question_Bank")
                        .WithMany("Quiz_Questions")
                        .HasForeignKey("Question_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SWP391_OnlineLearning_Platform.Models.Quiz", "Quiz")
                        .WithMany("Quiz_Questions")
                        .HasForeignKey("Quiz_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question_Bank");

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.Slide", b =>
                {
                    b.HasOne("SWP391_OnlineLearning_Platform.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("Status_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.Topic", b =>
                {
                    b.HasOne("SWP391_OnlineLearning_Platform.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("Course_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.User", b =>
                {
                    b.HasOne("SWP391_OnlineLearning_Platform.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("Status_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.User_Course", b =>
                {
                    b.HasOne("SWP391_OnlineLearning_Platform.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("Course_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SWP391_OnlineLearning_Platform.Models.Price_Package", "Price_Package")
                        .WithMany()
                        .HasForeignKey("Price_Package_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SWP391_OnlineLearning_Platform.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Price_Package");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.User_Question_Answer", b =>
                {
                    b.HasOne("SWP391_OnlineLearning_Platform.Models.Question_Bank", "Question_Bank")
                        .WithMany()
                        .HasForeignKey("Question_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SWP391_OnlineLearning_Platform.Models.User_Quiz", "User_Quiz")
                        .WithMany()
                        .HasForeignKey("User_Quiz_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question_Bank");

                    b.Navigation("User_Quiz");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.User_Quiz", b =>
                {
                    b.HasOne("SWP391_OnlineLearning_Platform.Models.Quiz", "Quiz")
                        .WithMany()
                        .HasForeignKey("Quiz_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SWP391_OnlineLearning_Platform.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quiz");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.Course", b =>
                {
                    b.Navigation("Course_Dimensions");

                    b.Navigation("Course_Packages");

                    b.Navigation("Owners");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.Dimension", b =>
                {
                    b.Navigation("Course_Dimensions");

                    b.Navigation("Question_Dimensions");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.Price_Package", b =>
                {
                    b.Navigation("Course_Packages");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.Question_Bank", b =>
                {
                    b.Navigation("Question_Dimensions");

                    b.Navigation("Quiz_Questions");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.Quiz", b =>
                {
                    b.Navigation("Quiz_Questions");
                });

            modelBuilder.Entity("SWP391_OnlineLearning_Platform.Models.User", b =>
                {
                    b.Navigation("Owners");
                });
#pragma warning restore 612, 618
        }
    }
}
